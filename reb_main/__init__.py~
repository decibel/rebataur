from multicorn import ForeignDataWrapper
import tweepy
from tweepy.streaming import StreamListener
from tweepy import Stream

from fdwtwitter.twitterfdwservice import TwitterService

# Twitter FDW
''''

drop foreign table if exists fd_twitter cascade;
CREATE FOREIGN TABLE fd_twitter (
    tweet_data jsonb,
    fn_name text,
    search_text text  
)server fd_twitter_srv options(
	access_token  '',
	access_token_secret  '',
	consumer_key '',
	consumer_secret  '');

drop table if exists twitter_service;
CREATE TABLE IF NOT EXISTS twitter_service (
    tweet_data jsonb,
    fn_name text,    
    search_text text,
    processed bool default false,
    entry_time timestamp default now()
);

insert into twitter_service ( select * from fd_twitter where fn_name = 'search' and search_text='rebataur');
select * from twitter_service;
'''
class TwitterFDW(ForeignDataWrapper):

   def __init__(self, options, columns):
        super(TwitterFDW, self).__init__(options, columns)
        self.columns = columns
	self.access_token =  options["access_token"]
	self.access_token_secret = options["access_token_secret"]
	self.consumer_key = options["consumer_key"]
	self.consumer_secret = options["consumer_secret"]
	self.tservice = TwitterService(self.access_token,self.access_token_secret,self.consumer_key,self.consumer_secret)

   def execute(self, quals, columns):
	#Put some defaults
	self.fn_name = "user_timeline"
	self.search_number = 10
	self.search_text = ""
	for qual in quals :
		if qual.field_name == "fn_name":
			self.fn_name = qual.value
		elif qual.field_name == "limit":
			self.search_number = qual.value
		elif qual.field_name == "search_text":
			self.search_text = qual.value
	
	line = {}
	result = self.tservice.getTwitterData(self.fn_name,self.search_number,self.search_text)
	for i in result:
		line["tweet_data"] = i
		line["fn_name"] = self.fn_name
		line["search_text"] = self.search_text 
		yield line
	
	
